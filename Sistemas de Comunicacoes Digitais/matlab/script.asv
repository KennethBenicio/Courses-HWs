%% Trabalho de SCD 
% Problema 1 - Modulacao M-QAM 
% 2021/03/24 - Lucas Abdalah
%

close all; clearvars; clc; % Clear the matlab ambient

% addpath 'C:\Users\lukin\Documents\GitHub\Courses-HWs\Sistemas de Comunicacoes Digitais\matlab\problema1'
addpath 'problema1' % Local path

M = 16;         % - Numero de simbolos da constelacao
L = 4096;       % - Tamanho da sequencia (bits)
K = log2(M);    % - Numero de bits/simbolo
N = L/K;        % - Numero de simbolos a serem transmitidos

s_m = randi([0 1],L,1)';   % - Mensagem a transmitir

D = de2bi([0:M-1],log2(M),'left-msb');

G = zeros(M,log2(M));

% for ii=1:M
%     for jj=1:log2(M)        
%         G(ii,log2(M)) = D(ii,log2(M));
%     end
% end

b=[0,0,1,0];
g=[0,0,1,1];

g=zeros(1,4);
n = 0;

while K - n > 0
    ii = K - n;
    disp(['entrou no while:', num2str(ii)]);

    if ii == K
        disp(['Entrou no if: ii=', num2str(ii)]);
        g(ii) = (b(ii));
    else
        disp(['Entrou no else: ii=', num2str(ii)]);
        disp(['xor', num2str(ii+1), ' e', num2str(ii)]);
        g(ii) = double(xor(logical(b(ii+1)),logical(b(ii))));
    end
    disp(['g(',num2str(ii),') = ',num2str(g(ii))]);
    n=n+1;
end

%dec2bin(str2num(sprintf('%d',x).'))

%% Grey Code
% function b = gray2bin(g)
%     b(1) = g(1);
%     for i = 2 : length(g);
%         x = xor(str2num(b(i-1)), str2num(g(i)));
%         b(i) = num2str(x);
%     end
%
% Em_No = 30;     % - Razao sinal-ruido
%
%
%

